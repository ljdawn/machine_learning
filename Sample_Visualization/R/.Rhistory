a <- c(1,2)
a
b <- c((1),(2)
)
b
a
a <- matrix(c(1,2),1,0)
a <- matrix(c(1,2),1,0))
a <- matrix(c(1,2),1,1))
a <- matrix(c(1,2),1,1)
a
a <- matrix(c(1,2),1,2)
a
b <- matrix(c(1,2),2,1)
b
a*b
b*a
b %*% a
a %*% b
choose(4,10)
choose(10,4)
choose(10,2)
45*5
choose(8,2)
choose(5,2)
13/21
choose(52,5)
choose(13,2)
choose(13,2)*48
choose(13,2)*48/choose(52,5)
setwd("H:/github/machine_learning/Sample_Visualization/R")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
kb_days = read.csv("closed_kb_days_101006_140107", header = TRUE, sep = "\t")
kbed_times = read.csv("closed_kbed_times_101006_140107", header = TRUE, sep = "\t")
colnames(kbed_times)[1] <- "times"
kb_days_f1 <- data.frame(kb_days[kb_days != 0])
colnames(kb_days_f1)[1] <- "days"
kb_days_f2 = data.frame(kb_days_f1[kb_days_f1 != 1])
colnames(kb_days_f2)[1] <- "days"
p0 <- ggplot(data=kb_days,aes(x=days), colour = factor(cyl))
p2 <- ggplot(data=kb_days_f2,aes(x=days), colour = factor(cyl))
p_0 <-p0 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 1) + xlab("kb days(binwidth = a week)") + ylab("day counts")
p_2 <-p2 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 7) + xlab("kb days(binwidth = a week)") + ylab("day counts") + scale_x_continuous(limits=c(0, 365))
p3 <- ggplot(data=kbed_times,aes(x=times), colour = factor(cyl))
p_3 <-p3 + labs(title = "kbed_times_histogram") + geom_histogram(binwidth = 1) + xlab("kbed times(binwidth = One time)") + ylab("time counts")
p_3
boxplot(kb=days$days)
boxplot(kb_days$days)
?boxplot
qplot(cut, carat, data = diamonds, geom = "boxplot")
diamonds
qplot(cut, data = diamonds, geom = "boxplot")
qplot(cut, data = diamonds, geom = "boxplot")
qplot(cut, carat, data = diamonds, geom = "boxplot")
qplot(carat, price, data = diamonds, color = cut, facets = ~ cut)
qplot(price, data = diamonds, geom = "histogram")
p0 +geom_boxplot()
factor(cyl)
library(ggplot2)
qplot(factor(cyl), mpg, data = mtcars, geom = "boxplot")
mpg
cyl
factor(cyl)
factor(data$cyl)
mtcars$cyl
p0 + stat_density(colour="blue", fill=NA)
p0 + stat_density()
p0 + stat_density() + geom_histogram()
p0 + stat_density(colour="blue", fill=NA) + geom_histogram()
p0 + geom_dotplot()
p0  + geom_histogram()
p_3
p0 <- ggplot(data=kb_days,aes(x=days), colour = factor(days))
p2 <- ggplot(data=kb_days_f2,aes(x=days), colour = factor(days))
p_0 <-p0 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 1) + xlab("kb days(binwidth = a week)") + ylab("day counts")
p_2 <-p2 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 7) + xlab("kb days(binwidth = a week)") + ylab("day counts") + scale_x_continuous(limits=c(0, 365))
p3 <- ggplot(data=kbed_times,aes(x=times), colour = factor(days))
p_3 <-p3 + labs(title = "kbed_times_histogram") + geom_histogram(binwidth = 1) + xlab("kbed times(binwidth = One time)") + ylab("time counts")
p_3
p0 + scale_fill_continuous(low="black", high="pink")
p_0 + scale_fill_continuous(low="black", high="pink")
p_0 + scale_colour_hue()
library(ggplot2)
kb_days = read.csv("closed_kb_days_101006_140107", header = TRUE, sep = "\t")
kbed_times = read.csv("closed_kbed_times_101006_140107", header = TRUE, sep = "\t")
colnames(kbed_times)[1] <- "times"
kb_days_f1 <- data.frame(kb_days[kb_days != 0])
colnames(kb_days_f1)[1] <- "days"
kb_days_f2 = data.frame(kb_days_f1[kb_days_f1 != 1])
colnames(kb_days_f2)[1] <- "days"
p0 <- ggplot(data=kb_days,aes(x=days), colour = factor(days))
p2 <- ggplot(data=kb_days_f2,aes(x=days), colour = factor(days))
p_0 <-p0 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 1) + xlab("kb days(binwidth = a week)") + ylab("day counts")
p_2 <-p2 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 7) + xlab("kb days(binwidth = a week)") + ylab("day counts") + scale_x_continuous(limits=c(0, 365))
p3 <- ggplot(data=kbed_times,aes(x=times), colour = factor(days))
p_3 <-p3 + labs(title = "kbed_times_histogram") + geom_histogram(binwidth = 1) + xlab("kbed times(binwidth = One time)") + ylab("time counts")
p_3 + scale_colour_hue()
p_0 <-p0 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 1) + xlab("kb days(binwidth = a week)") + ylab("day counts")
p_0
p_0 <-p0 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 7) + xlab("kb days(binwidth = a week)") + ylab("day counts")
p_0
summary(kb_days)
p_0 + geom_text()
p_
p_0
p_0 + geom_text(data = NULL, x = 5, y = 30, label = "plot mpg vs. wt")
p_0
sum(kb_days)
sum(kb_days[kb_day ==1])
sum(kb_days[kb_days ==1])
sum(kb_days[kb_days ==1])/sum(kb_days)
sum(kb_days[kb_days <= 1])/sum(kb_days)
sum(kb_days[kb_days <= 7])/sum(kb_days)
sum(kb_days[kb_days <= 30])/sum(kb_days)
sum(kb_days[kb_days <= 30])/kb_days.lenth()
sum(kb_days[kb_days <= 30])/len(kb_days)
sum(kb_days[kb_days <= 30])/lenth(kb_days)
sum(kb_days[kb_days <= 30])/length(kb_days)
lengh(kb_days[kb_days <= 30])/length(kb_days)
length(kb_days[kb_days <= 30])/length(kb_days)
length(kb_days)
length(kb_days$days)
length(kb_days[kb_days <= 30])/length(kb_days$days)
length(kb_days[kb_days <= 1])/length(kb_days$days)
length(kb_days[kb_days <= 7])/length(kb_days$days)
p_2
length(kb_days[kb_days <= 49])/length(kb_days$days)
length(kb_days[kb_days <= 42])/length(kb_days$days)
b = length(kb_days[kb_days <= 42])/length(kb_days$days)
a = length(kb_days[kb_days <= 49])/length(kb_days$days)
a - b
a = length(kb_days[kb_days <= 63])/length(kb_days$days)
b = length(kb_days[kb_days <= 56])/length(kb_days$days)
a-b
library(ggplot2)
Agw = read.csv("Agent_w_2_pg", header = TRUE, sep = "\t")
Sow = read.csv("Soft_w_2_pg", header = TRUE, sep = "\t")
p0 <- ggplot(data=Agw,aes(x = days_1, y = time_1), colour = factor(days))
p1 <- ggplot(data=Sow,aes(x = days_0, y = time_0), colour = factor(days))
p0 + geom_point()
rstudio::viewData(Agw)
p0 <- ggplot(data=Agw,aes(x = days_0, y = time_0), colour = factor(days))
p1 <- ggplot(data=Sow,aes(x = days_1, y = time_1), colour = factor(days))
p0 + geom_point()
p0 <- ggplot(data=Agw,aes(x = days_0, y = times_0), colour = factor(days))
p1 <- ggplot(data=Sow,aes(x = days_1, y = times_1), colour = factor(days))
p0 + geom_point()
p0 + geom_point() + scale_x_log10()
p0 + geom_point() + scale_y_log10()
p0 + geom_point() + scale_y_log10()
p_0 <- p0 + geom_point() + scale_y_log10() + labs(title = "Agent In") + xlab("days pg 2 kb") + ylab("time counts")
p_0
p_0 <- p0 + geom_point() + scale_y_log10() + labs(title = "Agent In") + xlab("days pg 2 kb") + ylab("time counts(in log)")
p_0
p_1 <- p1 + geom_point() + scale_y_log10() + labs(title = "Robot In") + xlab("days pg 2 kb") + ylab("time counts(in log)")
p_1
rstudio::viewData(Sow)
p1 <- ggplot(data=Sow,aes(x = days_1, y = time_1), colour = factor(days))
p_1 <- p1 + geom_point() + scale_y_log10() + labs(title = "Robot In") + xlab("days pg 2 kb") + ylab("time counts(in log)")
p_1
p_3 <-p3 + labs(title = "kbed_times_histogram") + geom_histogram(binwidth = 1) + xlab("kbed times(binwidth = One time)") + ylab("time counts")
p_3
library(ggplot2)
kb_days = read.csv("closed_kb_days_101006_140107", header = TRUE, sep = "\t")
kbed_times = read.csv("closed_kbed_times_101006_140107", header = TRUE, sep = "\t")
colnames(kbed_times)[1] <- "times"
kb_days_f1 <- data.frame(kb_days[kb_days != 0])
colnames(kb_days_f1)[1] <- "days"
kb_days_f2 = data.frame(kb_days_f1[kb_days_f1 != 1])
colnames(kb_days_f2)[1] <- "days"
p0 <- ggplot(data=kb_days,aes(x=days), colour = factor(days))
p2 <- ggplot(data=kb_days_f2,aes(x=days), colour = factor(days))
p_0 <-p0 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 7) + xlab("kb days(binwidth = a week)") + ylab("day counts")
p_2 <-p2 + labs(title = "kb_days_histogram") + geom_histogram(binwidth = 7) + xlab("kb days(binwidth = a week)") + ylab("day counts") + scale_x_continuous(limits=c(0, 365))
p3 <- ggplot(data=kbed_times,aes(x=times), colour = factor(days))
p_3 <-p3 + labs(title = "kbed_times_histogram") + geom_histogram(binwidth = 1) + xlab("kbed times(binwidth = One time)") + ylab("time counts")
p_3
library(ggplot2)
p <- ggplot(mtcars, aes(mpg, wt)) + geom_point()
p
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
rstudio::viewData(Prob)
rstudio::viewData(Prob)
p <- ggplot(Prob, aes(x = times, y = suc)) + geom_point()
p
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc)) + geom_line()
p
p + facet_grid(. ~ class)
p + facet_grid(class ~ .)
p <- ggplot(Prob, aes(x = times, y = suc)) + geom_point()
p + facet_grid(class ~ .)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + facet_grid(class ~ .) + geom_point()
p + facet_grid(class ~ .) + geom_point()
p + facet_grid(class ~ .) + geom_line()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p <- p + facet_grid(class ~ .)
p + geom_point()
p <- p + facet_grid(class ~ .)
p + geom_line()
p + geom_density()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p <- p + facet_grid(class ~ .)
p + geom_density()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p <- p + facet_grid(class ~ .)
p + geom_density()
p + geom_line()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p <- p + facet_grid(class ~ .)
p + geom_point()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_point()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_line()
p + geom_abline()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_geom_density()
p + geom_density()
p <- gplot(times, suc, Prob)
p <- qplot(times, suc, Prob)
p + geom_density()
rstudio::viewData(Prob)
p <- qplot(x=times, y=suc, Prob)
p + geom_density()
p + geom_abline()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- qplottimes, suc, Prob)
p <- qplot(times, suc, Prob)
p + geom_abline()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_path()
p + geom_path()
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_quantile()
p + geom_point()
p + geom_point() + geom_smooth()
p + geom_point() + stat_density()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_point() + stat_density()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_point() + stat_density()
p + geom_line()
p + geom_line()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_line()
p
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_line()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_point()
p + geom_point() + geom_smooth()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_point() + geom_smooth()
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_histogram() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
p + geom_density() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
histogram
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_histogram() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_dotplot() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_histogram() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
Prob_r = read.csv("prob_by_rates", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_histogram() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
pr <- ggplot(Prob_r, aes(x = times, y = suc))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate")
pr <- ggplot(Prob_r, aes(x = times, y = suc), )
pr <- ggplot(Prob_r, aes(x = times, y = suc))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + scale_y_continuous(limits=c(0, 0.1))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + scale_y_continuous(limits=c(0, 1))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + scale_y_continuous(limits=c(0, 10))
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
Prob_r = read.csv("prob_by_rates", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_histogram() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
pr <- ggplot(Prob_r, aes(x = times, y = suc))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + expand_limits(y = c(1, 9))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + expand_limits(y = c(0, 9))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + expand_limits(y = c(0, 9))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + expand_limits(y = c(0, 1))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + expand_limits(y = c(0.0, 1.0))
library(ggplot2)
Prob = read.csv("prob_by_times", header = TRUE, sep = "\t")
Prob_r = read.csv("prob_by_rates", header = TRUE, sep = "\t")
p <- ggplot(Prob, aes(x = times, y = suc))
p + geom_histogram() + labs(title = "kb process") + xlab("kb times") + ylab("sucess times")
pr <- ggplot(Prob_r, aes(x = times, y = suc))
pr + geom_point() + labs(title = "kb process") + xlab("kb times") + ylab("sucess rate") + expand_limits(y = c(0.0, 1.0))
library(ggplot2)
CC = read.csv("cc_2_end_days", header = TRUE, sep = "\t")
p <- ggplot(data=CC,aes(x=days))
p + geom_histogram(binwidth = 1) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times")
p <- ggplot(data=CC,aes(x=times))
p + geom_histogram(binwidth = 1) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times")
p + geom_histogram(binwidth = 7) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times")
p + geom_histogram(binwidth = 7) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times") + expand_limits(y = c(0, 1000))
p + geom_histogram(binwidth = 7) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times") + scale_x_continuous(limits=c(0, 5000))
p + geom_histogram(binwidth = 7) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times") + scale_x_continuous(limits=c(0, 1000))
p + geom_histogram(binwidth = 1) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times") + scale_x_continuous(limits=c(0, 1000))
library(ggplot2)
CC = read.csv("cc_2_end_days", header = TRUE, sep = "\t")
p <- ggplot(data=CC,aes(x=days))
p + geom_histogram(binwidth = 1) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times") + scale_x_continuous(limits=c(0, 1000))
library(ggplot2)
CC = read.csv("cc_2_end_days", header = TRUE, sep = "\t")
p <- ggplot(data=CC,aes(x=times))
p + geom_histogram(binwidth = 1) + labs(title = "cc 2 end") + xlab("days(binwidth = One day)") + ylab("times") + scale_x_continuous(limits=c(0, 1000))
